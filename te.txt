use command git push origin master



void dfs(Node* curr,Node* node,vector<Node*> &vis)
{
  vis[node->val] = node;
  for(auto nei:curr->neighbours)
  {
     if(vis[nei->val] == NULL){
         Node* newnode = new Node(nei->val);
         (node->neighbours).push_back(newnode);
        dfs(nei,newnode,vis);
     }else{
      (node->neighbours).push_back(vis[nei->val]);
   }

   
  }

}


Node* clonegraph(Node* node){
  if(!node) return NULL;
  vector<Node*> vis(1000,NULL);
  Node* clone = new Node(node->val);
  for(auto curr:node->neighbours){
    if(vis[curr->val] == NULL){
    Node8* newnode = new Node(curr->val);
    (clone->neighbours).push_back(newnode);
     dfs(curr,newnode,vis);


   }else{
    (clone->neighbours).push_back(vis[curr->val]);
  }


  }

  return clone;
 
}




/////////code for Number of Operations to Make Network Connected (https://leetcode.com/problems/number-of-operations-to-make-network-connected) leetcode problem

0--------1
|       /
|      /
|     /
|   /     
2 /       3 

to make all the comlputers connected we have to make connection like following  in the above diagram there are two disconnected componnent so we have to make 

2-1 = 1 connection between 1 and 3 then all the computers will connected  ans == no_of_connected_components -1;



0--------1
|        |     /
|        |
|        | 
2        3                                 



void dfs(int node,vector<int> &vis,vector<int> g[]){

  vis[node] = 1;
  for(int child:g[node]){
      if(vis[child] == 0){
           dfs(child,vis,g);
      }

   }

}

int makesteps(int n,vector<vector<int>> connections)
{

 vector<int> vis(n,0);
 vector<int> g[n];
int r = connections.size();
 if(r<n-1) return -1;

  for(int i=0;i<connections.size(0;i++){
    g[connections[i][0]].push_back(connections[i][1]);
    g[connections[i][1]].push_back(connections[i][0]); 
  }

  int c_c = 0;
for(int i=0;i<n;i++){
    if(vis[i] == 0){
       dfs(i,vis,g);
       c_c++;
     }

 }


return c_c-1;


}






























